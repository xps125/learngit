git is a version control system.
git is free software.
senny

0.
mkdir gitmy:create folder "gitmy"
cd gitmy:go to "gitmy"
git init:make the folder to "git"'s folder;initialize

1.
git merge dev :merge the branch "dev" to current branch
git checkout -b dev: create the branch "dev" and change to the "dev"
git branch -d dev:delete the branch "dev" but can't delete the current branch


git log --graph --pretty=oneline --abbrev-commit:draw a graph about the branch merge.

git merge --no-ff -m "merge with no-ff" third: forbidden "Fast forward"

git stash:save current work.

2.
git log --graph --pretty=oneline --abbrev-commit:draw a graph about the branch merge.

3.
 forbidden "Fast forward" mode:(drop branch message when branches merged)
 *   062f422 merge with no-ff
|\
| * dc54b67 third version
|/
*   1f958bb taoy all

"Fast forward" mode:
*   a7788f3 conflict fixed
|\
| * cc5c294 add details for helping remember
* | a39e442 branch master commit
|/
* 23bb5dd new branch

4.
git merge --no-ff -m "merge with no-ff" third: forbidden "Fast forward"

git stash:save current work.

git stash list:show the saved temp list.

git stash pop: restore the temp,and drop it.

git stash apply:restore it but not drop, and you mast use "git stash drop" to drop it.

git stash apply stash@{0/x}:restore X version temp.

5.
new Feature:to add new function
eg:git checkout -b feature-vulcan

git branch -D feature-vulcan:Forced delete the branch.

6.
git tag
git tag v2.0 3345346(version)

eg:git tag -a v2.1 -m "version2.1 release" 2354
-s:private tag name

7.
create .ssh: ssh-keygen
c/Users/Administrator/.ssh/id_rsa

add remote git:git remote add origin git@github.com:xps125/learngit.git
push local message:
$git push -u orgin master :first time, you must say yes to the warning.
clone the remote git to local:
$git clone git@github:xps125/learngit

8.
git remote: check the local git name
git remote -v

git push origin third:push the branch to remote git

git checkout -b third origin/third:get the branch "third" from the remote. when you clone from the remote, you just get the master branch.
git push origin third: push the "third" to remote 

git pull :when conflict exist
